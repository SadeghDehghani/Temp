// <auto-generated />
using System;
using HrWorkflow.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HrWorkflow.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HrWorkflow.Models.ApproverGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("ApproverGroups");
                });

            modelBuilder.Entity("HrWorkflow.Models.ApproverGroupMember", b =>
                {
                    b.Property<int>("ApproverGroupId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("ApproverGroupId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ApproverGroupMembers");
                });

            modelBuilder.Entity("HrWorkflow.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Department")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Position")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("HrWorkflow.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("RequestTypeId")
                        .HasColumnType("int");

                    b.Property<int>("RequesterEmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("WorkflowInstanceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequestTypeId");

                    b.HasIndex("RequesterEmployeeId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("HrWorkflow.Models.RequestType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("RequestTypes");
                });

            modelBuilder.Entity("HrWorkflow.Models.WorkflowDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("RequestTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequestTypeId");

                    b.ToTable("WorkflowDefinitions");
                });

            modelBuilder.Entity("HrWorkflow.Models.WorkflowInstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CompletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrentStepId")
                        .HasColumnType("int");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("WorkflowDefinitionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrentStepId");

                    b.HasIndex("RequestId")
                        .IsUnique();

                    b.HasIndex("WorkflowDefinitionId");

                    b.ToTable("WorkflowInstances");
                });

            modelBuilder.Entity("HrWorkflow.Models.WorkflowStepDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("StepType")
                        .HasColumnType("int");

                    b.Property<int>("WorkflowDefinitionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkflowDefinitionId");

                    b.ToTable("WorkflowStepDefinitions");
                });

            modelBuilder.Entity("HrWorkflow.Models.WorkflowStepInstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ActorEmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("AssignedApproverGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("EnteredAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExitedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StepDefinitionId")
                        .HasColumnType("int");

                    b.Property<int>("WorkflowInstanceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActorEmployeeId");

                    b.HasIndex("AssignedApproverGroupId");

                    b.HasIndex("StepDefinitionId");

                    b.HasIndex("WorkflowInstanceId");

                    b.ToTable("WorkflowStepInstances");
                });

            modelBuilder.Entity("HrWorkflow.Models.WorkflowTransitionDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ApproverGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ConditionExpression")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("FromStepId")
                        .HasColumnType("int");

                    b.Property<int>("ToStepId")
                        .HasColumnType("int");

                    b.Property<int>("WorkflowDefinitionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverGroupId");

                    b.HasIndex("FromStepId");

                    b.HasIndex("ToStepId");

                    b.HasIndex("WorkflowDefinitionId");

                    b.ToTable("WorkflowTransitionDefinitions");
                });

            modelBuilder.Entity("HrWorkflow.Models.ApproverGroupMember", b =>
                {
                    b.HasOne("HrWorkflow.Models.ApproverGroup", "ApproverGroup")
                        .WithMany("Members")
                        .HasForeignKey("ApproverGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrWorkflow.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApproverGroup");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HrWorkflow.Models.Request", b =>
                {
                    b.HasOne("HrWorkflow.Models.RequestType", "RequestType")
                        .WithMany()
                        .HasForeignKey("RequestTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrWorkflow.Models.Employee", "RequesterEmployee")
                        .WithMany()
                        .HasForeignKey("RequesterEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequestType");

                    b.Navigation("RequesterEmployee");
                });

            modelBuilder.Entity("HrWorkflow.Models.WorkflowDefinition", b =>
                {
                    b.HasOne("HrWorkflow.Models.RequestType", "RequestType")
                        .WithMany()
                        .HasForeignKey("RequestTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequestType");
                });

            modelBuilder.Entity("HrWorkflow.Models.WorkflowInstance", b =>
                {
                    b.HasOne("HrWorkflow.Models.WorkflowStepDefinition", "CurrentStep")
                        .WithMany()
                        .HasForeignKey("CurrentStepId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HrWorkflow.Models.Request", "Request")
                        .WithOne("WorkflowInstance")
                        .HasForeignKey("HrWorkflow.Models.WorkflowInstance", "RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrWorkflow.Models.WorkflowDefinition", "WorkflowDefinition")
                        .WithMany()
                        .HasForeignKey("WorkflowDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentStep");

                    b.Navigation("Request");

                    b.Navigation("WorkflowDefinition");
                });

            modelBuilder.Entity("HrWorkflow.Models.WorkflowStepDefinition", b =>
                {
                    b.HasOne("HrWorkflow.Models.WorkflowDefinition", "WorkflowDefinition")
                        .WithMany("Steps")
                        .HasForeignKey("WorkflowDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkflowDefinition");
                });

            modelBuilder.Entity("HrWorkflow.Models.WorkflowStepInstance", b =>
                {
                    b.HasOne("HrWorkflow.Models.Employee", "ActorEmployee")
                        .WithMany()
                        .HasForeignKey("ActorEmployeeId");

                    b.HasOne("HrWorkflow.Models.ApproverGroup", "AssignedApproverGroup")
                        .WithMany()
                        .HasForeignKey("AssignedApproverGroupId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("HrWorkflow.Models.WorkflowStepDefinition", "StepDefinition")
                        .WithMany()
                        .HasForeignKey("StepDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrWorkflow.Models.WorkflowInstance", "WorkflowInstance")
                        .WithMany("StepInstances")
                        .HasForeignKey("WorkflowInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActorEmployee");

                    b.Navigation("AssignedApproverGroup");

                    b.Navigation("StepDefinition");

                    b.Navigation("WorkflowInstance");
                });

            modelBuilder.Entity("HrWorkflow.Models.WorkflowTransitionDefinition", b =>
                {
                    b.HasOne("HrWorkflow.Models.ApproverGroup", "ApproverGroup")
                        .WithMany()
                        .HasForeignKey("ApproverGroupId");

                    b.HasOne("HrWorkflow.Models.WorkflowStepDefinition", "FromStep")
                        .WithMany("OutgoingTransitions")
                        .HasForeignKey("FromStepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrWorkflow.Models.WorkflowStepDefinition", "ToStep")
                        .WithMany("IncomingTransitions")
                        .HasForeignKey("ToStepId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HrWorkflow.Models.WorkflowDefinition", "WorkflowDefinition")
                        .WithMany("Transitions")
                        .HasForeignKey("WorkflowDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApproverGroup");

                    b.Navigation("FromStep");

                    b.Navigation("ToStep");

                    b.Navigation("WorkflowDefinition");
                });

            modelBuilder.Entity("HrWorkflow.Models.ApproverGroup", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("HrWorkflow.Models.Request", b =>
                {
                    b.Navigation("WorkflowInstance");
                });

            modelBuilder.Entity("HrWorkflow.Models.WorkflowDefinition", b =>
                {
                    b.Navigation("Steps");

                    b.Navigation("Transitions");
                });

            modelBuilder.Entity("HrWorkflow.Models.WorkflowInstance", b =>
                {
                    b.Navigation("StepInstances");
                });

            modelBuilder.Entity("HrWorkflow.Models.WorkflowStepDefinition", b =>
                {
                    b.Navigation("IncomingTransitions");

                    b.Navigation("OutgoingTransitions");
                });
#pragma warning restore 612, 618
        }
    }
}
